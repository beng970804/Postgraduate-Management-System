package jets;

import java.awt.Color;
import java.sql.*;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.*;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author alfre
 */
public class AdminNotification extends javax.swing.JFrame{
    LinkedList<Notification> notificationList = new LinkedList<>();
    DefaultTableModel notificationModel = new DefaultTableModel(){
        public boolean isCellEditable(int row, int column)
        {
            return false;
        }
    };
    String url = "jdbc:db2:PMS";
    
    
    /**
     * Creates new form AdminNotification
     */
    public AdminNotification() {
        initComponents();
        notificationRefresh();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        MenuPanel = new javax.swing.JPanel();
        HomeLabel = new javax.swing.JLabel();
        HomeIconLabel = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        ViewNotificationPanel = new javax.swing.JPanel();
        ViewNotificationLabel = new javax.swing.JLabel();
        ViewNotificationIconLabel = new javax.swing.JLabel();
        GenerateNotification = new javax.swing.JPanel();
        GenerateNotificationLabel = new javax.swing.JLabel();
        GenerateNotificationIconLabel = new javax.swing.JLabel();
        NotificationPanel = new javax.swing.JPanel();
        NotificationLabel = new javax.swing.JLabel();
        NotificationIconLabel = new javax.swing.JLabel();
        ContentPanel = new javax.swing.JPanel();
        ContentGeneratePanel = new javax.swing.JPanel();
        GenerateNotificationLabel3 = new javax.swing.JLabel();
        NotificationTypeComboBox = new javax.swing.JComboBox<>();
        NotificationDateLabel = new javax.swing.JLabel();
        NotificationTypeLabel = new javax.swing.JLabel();
        NotificationDescriptionLabel = new javax.swing.JLabel();
        NotificationDateTextField = new javax.swing.JTextField();
        SaveButton = new javax.swing.JButton();
        NotificationDescriptionScrollPane = new javax.swing.JScrollPane();
        NotificationDescriptionTextArea = new javax.swing.JTextArea();
        ContentViewPanel = new javax.swing.JPanel();
        ViewNotificationLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        ViewNotificationTable = new javax.swing.JTable();
        ViewNDateLabel = new javax.swing.JLabel();
        ViewNContentLabel = new javax.swing.JLabel();
        ViewNTypeLabel = new javax.swing.JLabel();
        ViewNTypeText = new javax.swing.JTextField();
        ViewNDateText = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        ViewNContentText = new javax.swing.JTextArea();
        ContentMainPanel = new javax.swing.JPanel();
        NotificationLabel2 = new javax.swing.JLabel();
        ViewNotificationLabel2 = new javax.swing.JLabel();
        GenerateNotificationLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Admin - Notification");
        setMinimumSize(new java.awt.Dimension(1280, 720));
        setResizable(false);
        setSize(new java.awt.Dimension(1280, 720));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        MenuPanel.setBackground(new java.awt.Color(50, 100, 255));
        MenuPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        HomeLabel.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        HomeLabel.setForeground(new java.awt.Color(255, 255, 255));
        HomeLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        HomeLabel.setText("Home");
        MenuPanel.add(HomeLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 0, 270, 40));

        HomeIconLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        HomeIconLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/icons8_Back_Arrow_32px_3.png"))); // NOI18N
        HomeIconLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                HomeIconLabelMousePressed(evt);
            }
        });
        MenuPanel.add(HomeIconLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 70, 40));

        jSeparator1.setBackground(new java.awt.Color(255, 255, 255));
        jSeparator1.setForeground(new java.awt.Color(0, 0, 0));
        jSeparator1.setPreferredSize(new java.awt.Dimension(1, 1));
        MenuPanel.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 40, 340, 10));

        ViewNotificationPanel.setBackground(new java.awt.Color(60, 100, 255));
        ViewNotificationPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        ViewNotificationLabel.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        ViewNotificationLabel.setForeground(new java.awt.Color(255, 255, 255));
        ViewNotificationLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        ViewNotificationLabel.setText("View Notification");
        ViewNotificationLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ViewNotificationLabelMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                ViewNotificationLabelMousePressed(evt);
            }
        });
        ViewNotificationPanel.add(ViewNotificationLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 0, 270, 50));

        ViewNotificationIconLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ViewNotificationIconLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/icons8_View_24px.png"))); // NOI18N
        ViewNotificationPanel.add(ViewNotificationIconLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 70, 50));

        MenuPanel.add(ViewNotificationPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 150, 340, 50));

        GenerateNotification.setBackground(new java.awt.Color(60, 100, 255));
        GenerateNotification.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        GenerateNotificationLabel.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        GenerateNotificationLabel.setForeground(new java.awt.Color(255, 255, 255));
        GenerateNotificationLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        GenerateNotificationLabel.setText("Generate Notification");
        GenerateNotificationLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                GenerateNotificationLabelMousePressed(evt);
            }
        });
        GenerateNotification.add(GenerateNotificationLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 0, 270, 50));

        GenerateNotificationIconLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        GenerateNotificationIconLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/icons8_Add_File_24px.png"))); // NOI18N
        GenerateNotification.add(GenerateNotificationIconLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 70, 50));

        MenuPanel.add(GenerateNotification, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 100, 340, 50));

        NotificationPanel.setBackground(new java.awt.Color(60, 100, 255));
        NotificationPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        NotificationLabel.setFont(new java.awt.Font("Segoe UI", 1, 22)); // NOI18N
        NotificationLabel.setForeground(new java.awt.Color(255, 255, 255));
        NotificationLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        NotificationLabel.setText("Notification");
        NotificationLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                NotificationLabelMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                NotificationLabelMousePressed(evt);
            }
        });
        NotificationPanel.add(NotificationLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 0, 270, 50));

        NotificationIconLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        NotificationIconLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/icons8_Notification_24px.png"))); // NOI18N
        NotificationPanel.add(NotificationIconLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 70, 50));

        MenuPanel.add(NotificationPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 50, 340, 50));

        getContentPane().add(MenuPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 340, 720));

        ContentPanel.setLayout(new java.awt.CardLayout());

        ContentGeneratePanel.setBackground(new java.awt.Color(255, 255, 255));
        ContentGeneratePanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        GenerateNotificationLabel3.setFont(new java.awt.Font("Segoe UI", 1, 28)); // NOI18N
        GenerateNotificationLabel3.setForeground(new java.awt.Color(0, 0, 0));
        GenerateNotificationLabel3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        GenerateNotificationLabel3.setText("Generate Notification");
        ContentGeneratePanel.add(GenerateNotificationLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, 880, 40));

        NotificationTypeComboBox.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        NotificationTypeComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ENROLLMENT", "INVOICE", "EXAM SLIP", "EXAM RESULT", "MAINTENANCE" }));
        ContentGeneratePanel.add(NotificationTypeComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 100, 150, 30));

        NotificationDateLabel.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        NotificationDateLabel.setForeground(new java.awt.Color(0, 0, 0));
        NotificationDateLabel.setText("Notification Date : ");
        ContentGeneratePanel.add(NotificationDateLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 310, 200, 30));

        NotificationTypeLabel.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        NotificationTypeLabel.setForeground(new java.awt.Color(0, 0, 0));
        NotificationTypeLabel.setText("Notification Type : ");
        ContentGeneratePanel.add(NotificationTypeLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 100, 200, 30));

        NotificationDescriptionLabel.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        NotificationDescriptionLabel.setForeground(new java.awt.Color(0, 0, 0));
        NotificationDescriptionLabel.setText("Notification Description : ");
        ContentGeneratePanel.add(NotificationDescriptionLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 170, 200, 30));

        NotificationDateTextField.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        NotificationDateTextField.setText("Eg. 2017-08-20 (YYYY-MM-DD Format only)");
        NotificationDateTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                NotificationDateTextFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                NotificationDateTextFieldFocusLost(evt);
            }
        });
        ContentGeneratePanel.add(NotificationDateTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 310, 300, 30));

        SaveButton.setText("Save");
        SaveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveButtonActionPerformed(evt);
            }
        });
        ContentGeneratePanel.add(SaveButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 420, 100, 30));

        NotificationDescriptionTextArea.setColumns(20);
        NotificationDescriptionTextArea.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        NotificationDescriptionTextArea.setRows(5);
        NotificationDescriptionTextArea.setText("(Not exceeding 100 words)");
        NotificationDescriptionTextArea.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                NotificationDescriptionTextAreaFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                NotificationDescriptionTextAreaFocusLost(evt);
            }
        });
        NotificationDescriptionScrollPane.setViewportView(NotificationDescriptionTextArea);

        ContentGeneratePanel.add(NotificationDescriptionScrollPane, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 170, 300, 100));

        ContentPanel.add(ContentGeneratePanel, "card3");

        ContentViewPanel.setBackground(new java.awt.Color(255, 255, 255));
        ContentViewPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        ViewNotificationLabel3.setFont(new java.awt.Font("Segoe UI", 1, 28)); // NOI18N
        ViewNotificationLabel3.setForeground(new java.awt.Color(0, 0, 0));
        ViewNotificationLabel3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        ViewNotificationLabel3.setText("View Notification");
        ContentViewPanel.add(ViewNotificationLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, 880, 40));

        ViewNotificationTable.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        ViewNotificationTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        ViewNotificationTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ViewNotificationTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(ViewNotificationTable);

        ContentViewPanel.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 100, 880, 270));

        ViewNDateLabel.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        ViewNDateLabel.setForeground(new java.awt.Color(0, 0, 0));
        ViewNDateLabel.setText("Notification Date                          :");
        ContentViewPanel.add(ViewNDateLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 500, 290, 40));

        ViewNContentLabel.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        ViewNContentLabel.setForeground(new java.awt.Color(0, 0, 0));
        ViewNContentLabel.setText("Notification Content                    :");
        ContentViewPanel.add(ViewNContentLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 570, 290, 40));

        ViewNTypeLabel.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        ViewNTypeLabel.setForeground(new java.awt.Color(0, 0, 0));
        ViewNTypeLabel.setText("Notification Type                          :");
        ContentViewPanel.add(ViewNTypeLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 430, 290, 40));

        ViewNTypeText.setEditable(false);
        ContentViewPanel.add(ViewNTypeText, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 430, 500, 40));

        ViewNDateText.setEditable(false);
        ContentViewPanel.add(ViewNDateText, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 500, 500, 40));

        ViewNContentText.setEditable(false);
        ViewNContentText.setColumns(20);
        ViewNContentText.setRows(5);
        jScrollPane2.setViewportView(ViewNContentText);

        ContentViewPanel.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 570, 500, 100));

        ContentPanel.add(ContentViewPanel, "card4");

        ContentMainPanel.setBackground(new java.awt.Color(255, 255, 255));
        ContentMainPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        NotificationLabel2.setFont(new java.awt.Font("Segoe UI", 1, 28)); // NOI18N
        NotificationLabel2.setForeground(new java.awt.Color(0, 0, 0));
        NotificationLabel2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        NotificationLabel2.setText("Notification");
        ContentMainPanel.add(NotificationLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, 880, 40));

        ViewNotificationLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        ViewNotificationLabel2.setForeground(new java.awt.Color(0, 0, 0));
        ViewNotificationLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ViewNotificationLabel2.setText("View Notification");
        ViewNotificationLabel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        ViewNotificationLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ViewNotificationLabel2MouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                ViewNotificationLabel2MousePressed(evt);
            }
        });
        ContentMainPanel.add(ViewNotificationLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 100, 250, 60));

        GenerateNotificationLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        GenerateNotificationLabel2.setForeground(new java.awt.Color(0, 0, 0));
        GenerateNotificationLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        GenerateNotificationLabel2.setText("Generate Notification");
        GenerateNotificationLabel2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        GenerateNotificationLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                GenerateNotificationLabel2MouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                GenerateNotificationLabel2MousePressed(evt);
            }
        });
        ContentMainPanel.add(GenerateNotificationLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 100, 250, 60));

        ContentPanel.add(ContentMainPanel, "card4");

        getContentPane().add(ContentPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 0, 940, 720));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SaveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveButtonActionPerformed
        // TODO add your handling code here:
        String id;
        String type;
        String date;
        String description;
        
        Connection con;
        
        try{
            Class.forName("com.ibm.db2.jcc.DB2Driver");
            con = DriverManager.getConnection(url);
            Statement sql1;
            
            type = NotificationTypeComboBox.getItemAt(NotificationTypeComboBox.getSelectedIndex());
            description = checkDescription(NotificationDescriptionTextArea.getText());
            date = NotificationDateTextField.getText();
            boolean checkDate = checkDate(date);
            
            
            if ((description.length()<=500)&&checkDate){
                String newID;
                if (notificationList.isEmpty()){
                    newID = "NOT-000001";
                }
                else{
                    newID = generateNotificationID(notificationList.get(notificationList.size()-1).getID());
                }
                sql1 = con.createStatement();
                String s1 = "insert into notification values ('" +
                        newID + "', '" +
                        type + "', '" + 
                        description + "', '" +
                        date + "', '" +
                        Jets.UserID + "')";
                sql1.executeUpdate(s1);
                sql1.close();
                JOptionPane.showMessageDialog(null, "Notification added successfully");
                notificationRefresh();
                NotificationDescriptionTextArea.setText("");
                NotificationDateTextField.setText("");
            }
            else{
                if (description.length()>500){
                    JOptionPane.showMessageDialog(new JFrame(), "The words should not exceed 100 characters");
                }
                else{
                    JOptionPane.showMessageDialog(new JFrame(), "The date should be in YYYY-MM-DD format. Ensure the value is correct");
                }
            }
            
            
            con.close();
        }
        catch (ClassNotFoundException | SQLException e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_SaveButtonActionPerformed

    private void GenerateNotificationLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_GenerateNotificationLabel2MouseClicked
        // TODO add your handling code here:
        ContentGeneratePanel.setVisible(true);
        ContentMainPanel.setVisible(false);
        ContentViewPanel.setVisible(false);
    }//GEN-LAST:event_GenerateNotificationLabel2MouseClicked

    private void NotificationLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_NotificationLabelMouseClicked
        // TODO add your handling code here:
        ContentMainPanel.setVisible(true);
        ContentGeneratePanel.setVisible(false);
        ContentViewPanel.setVisible(false);
    }//GEN-LAST:event_NotificationLabelMouseClicked

    private void HomeIconLabelMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_HomeIconLabelMousePressed
        // TODO add your handling code here:
        if (Jets.UserType.equals("STUDENT"))
            new StudentMainMenu().setVisible(true);
        if (Jets.UserType.equals("ADMIN"))
            new AdminMainMenu().setVisible(true);
        if (Jets.UserType.equals("LECTURER"))
            new LecturerMainMenu().setVisible(true);
        dispose();
    }//GEN-LAST:event_HomeIconLabelMousePressed

    private void GenerateNotificationLabel2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_GenerateNotificationLabel2MousePressed
        // TODO add your handling code here:
        ContentGeneratePanel.setVisible(true);
        ContentMainPanel.setVisible(false);
        ContentViewPanel.setVisible(false);
    }//GEN-LAST:event_GenerateNotificationLabel2MousePressed

    private void NotificationLabelMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_NotificationLabelMousePressed
        // TODO add your handling code here:
        ContentMainPanel.setVisible(true);
        ContentGeneratePanel.setVisible(false);
        ContentViewPanel.setVisible(false);
    }//GEN-LAST:event_NotificationLabelMousePressed

    private void GenerateNotificationLabelMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_GenerateNotificationLabelMousePressed
        // TODO add your handling code here:
        ContentGeneratePanel.setVisible(true);
        ContentMainPanel.setVisible(false);
        ContentViewPanel.setVisible(false);
    }//GEN-LAST:event_GenerateNotificationLabelMousePressed

    private void ViewNotificationLabelMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ViewNotificationLabelMousePressed
        // TODO add your handling code here:
        ContentMainPanel.setVisible(false);
        ContentGeneratePanel.setVisible(false);
        ContentViewPanel.setVisible(true);
        //retrieveNotification();
    }//GEN-LAST:event_ViewNotificationLabelMousePressed

    private void ViewNotificationLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ViewNotificationLabelMouseClicked
        // TODO add your handling code here:
        ContentMainPanel.setVisible(false);
        ContentGeneratePanel.setVisible(false);
        ContentViewPanel.setVisible(true);
        //retrieveNotification();
    }//GEN-LAST:event_ViewNotificationLabelMouseClicked

    private void ViewNotificationLabel2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ViewNotificationLabel2MousePressed
        // TODO add your handling code here:
        ContentMainPanel.setVisible(false);
        ContentGeneratePanel.setVisible(false);
        ContentViewPanel.setVisible(true);
        //retrieveNotification();
    }//GEN-LAST:event_ViewNotificationLabel2MousePressed

    private void ViewNotificationLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ViewNotificationLabel2MouseClicked
        // TODO add your handling code here:
        ContentMainPanel.setVisible(false);
        ContentGeneratePanel.setVisible(false);
        ContentViewPanel.setVisible(true);
        //retrieveNotification();
    }//GEN-LAST:event_ViewNotificationLabel2MouseClicked

    private void NotificationDescriptionTextAreaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_NotificationDescriptionTextAreaFocusGained
        // TODO add your handling code here:
        if (NotificationDescriptionTextArea.getText().equals("(Not exceeding 100 words)"))
        {
            NotificationDescriptionTextArea.setForeground(new java.awt.Color(0,0,0));
            NotificationDescriptionTextArea.setText("");
        }
    }//GEN-LAST:event_NotificationDescriptionTextAreaFocusGained

    private void NotificationDescriptionTextAreaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_NotificationDescriptionTextAreaFocusLost
        // TODO add your handling code here:
        if (NotificationDescriptionTextArea.getText().equals(""))
        {
            NotificationDescriptionTextArea.setForeground(new java.awt.Color(0,0,0));
            NotificationDescriptionTextArea.setText("(Not exceeding 100 words)");
        }
    }//GEN-LAST:event_NotificationDescriptionTextAreaFocusLost

    private void NotificationDateTextFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_NotificationDateTextFieldFocusGained
        // TODO add your handling code here:
        if (NotificationDateTextField.getText().equals("Eg. 2017-08-20 (YYYY-MM-DD Format only)"))
        {
            NotificationDateTextField.setForeground(new java.awt.Color(0,0,0));
            NotificationDateTextField.setText("");
        }
    }//GEN-LAST:event_NotificationDateTextFieldFocusGained

    private void NotificationDateTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_NotificationDateTextFieldFocusLost
        // TODO add your handling code here:
        if (NotificationDateTextField.getText().equals(""))
        {
            NotificationDateTextField.setForeground(new java.awt.Color(0,0,0));
            NotificationDateTextField.setText("Eg. 2017-08-20 (YYYY-MM-DD Format only)");
        }
    }//GEN-LAST:event_NotificationDateTextFieldFocusLost

    private void ViewNotificationTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ViewNotificationTableMouseClicked
        // TODO add your handling code here:
        int x = ViewNotificationTable.getSelectedRow();
        int y = notificationList.size()-1;
        ViewNDateText.setText(notificationList.get(y-x).getDate());
        ViewNTypeText.setText(notificationList.get(y-x).getType());
        ViewNContentText.setText(notificationList.get(y-x).getDescription());
    }//GEN-LAST:event_ViewNotificationTableMouseClicked
  
    public boolean checkDate(String date){
        date = date.toLowerCase();
        if (date.contains("a")||date.contains("b")||date.contains("c")||date.contains("d")||date.contains("e")||date.contains("f")
                ||date.contains("g")||date.contains("h")||date.contains("i")||date.contains("j")||date.contains("k")||date.contains("l")
                ||date.contains("m")||date.contains("n")||date.contains("o")||date.contains("p")||date.contains("q")||date.contains("r")
                ||date.contains("s")||date.contains("t")||date.contains("u")||date.contains("v")||date.contains("w")||date.contains("x")
                ||date.contains("y")||date.contains("z")||date.contains(".")||date.contains("/")){
            return false;
        }
        if((date.length()>10)||(date.length()<10)){
            return false;
        }
        DateTimeFormatter dtf = DateTimeFormatter.ofPattern("yyyy-MM-dd");
        LocalDate localDate = LocalDate.now();
        String d1 = localDate.format(dtf);
        String[] dt = d1.split("-");
        String y = dt[0];
        String m = dt[1];
        String d = dt[2];
        String[] splited = date.split("-");
        String splitYear = splited[0];
        String splitMonth = splited[1];
        String splitDay = splited[2];
        int currentY = Integer.parseInt(y);
        int currentM = Integer.parseInt(m);
        int currentD = Integer.parseInt(d);
        int targetY = Integer.parseInt(splitYear);
        int targetM = Integer.parseInt(splitMonth);
        int targetD = Integer.parseInt(splitDay);
        if (currentY>targetY){
            return false;
        }
        if ((currentY<=targetY)&&(currentM>targetM)){
            return false;
        }
        if ((currentY<=targetY)&&(currentM<=targetM)&&(currentD>targetD)){
            return false;
        }
        String datePattern = "\\d{4}-\\d{2}-\\d{2}";
        return ((date.matches(datePattern))&&(checkMonthAndDay(Integer.parseInt(splitYear),Integer.parseInt(splitMonth),Integer.parseInt(splitDay))));
    }
    
    public boolean checkMonthAndDay(int year, int month, int day){
        int month31[] = {1,3,5,7,8,10,12};
        int month30[] = {4,6,9,11};
        int month28[] = {2};
        double yr = (double)year;
        boolean checked = true;
        if (contains(month31, month)){
            if (day>31){
                checked = false;
            }
        }
        if (contains(month30, month)){
            if (day>30){
                checked = false;
            }
        }
        if (contains(month28, month)){
            if (yr%4 == 0){
                if (day>29){
                    checked = false;
                }
            }
            else{
                if (day>28){
                    checked = false;
                }
            }
        }
        return checked;
    }
    
    public boolean contains(final int[] array, final int v) {
        for (final int e : array)
            if (e == v)
                return true;
        return false;
    }
    
    public String checkDescription(String description){
        String temp = description.replace("\n", " ");
        return temp;
    }
    
    public String generateNotificationID(String oldID){
        String[] splited = oldID.split("-");
        String splitDigit = splited[1];
        int digit = Integer.parseInt(splitDigit);
        String newID = String.format("%0"+6+"d", digit+1);
        return ("NOT-"+newID);
    }
    
    public void notificationRefresh(){
        notificationList.clear();
        String id;
        String type;
        String date;
        String description;
        
        Connection con;
        
        try{
            Class.forName("com.ibm.db2.jcc.DB2Driver");
            con = DriverManager.getConnection(url);
            Statement sql1;
            ResultSet rs;

            String s1 = "select * from notification";
            sql1 = con.createStatement();
            rs = sql1.executeQuery(s1);
            
            while (rs.next()){
                id = rs.getString("notification_id");
                type = rs.getString("notification_type");
                description = rs.getString("notification_description");
                date = rs.getString("notification_date");
                notificationList.add(new Notification(id,type,description,date));            
            }

            rs.close();
            sql1.close();
            con.close();
        }
        catch (ClassNotFoundException | SQLException e) {
            System.out.println(e);
        }      
        if (notificationList.size()>0){
            notificationModel = (DefaultTableModel) ViewNotificationTable.getModel();
            int x = notificationList.size()-1; // get the last(latest) element
            Object[][] notificationData = {
                {notificationList.get(x).getType(), notificationList.get(x).getDescription(), notificationList.get(x).getDate()}
            }; 
            String[] notificationColName = {
                "Notification Type", "Notification Description" , "Notification Date"
            };
            notificationModel.setDataVector(notificationData, notificationColName);
            //i = x-1 -> get the second last element
            for (int i=x-1;i>-1;i--){
                notificationModel.addRow(new Object[]{notificationList.get(i).getType(), notificationList.get(i).getDescription(), notificationList.get(i).getDate()});
            }
            ViewNotificationTable.setModel(notificationModel);
        }
        else{
            Object[][] Subjectdata =
                {
                    {}
                };
            String[] SubjectcolName = {"Notification Type", "Notification Description" , "Notification Date"};
            notificationModel.setDataVector(Subjectdata, SubjectcolName);
            notificationModel.removeRow(0);
            ViewNotificationTable.setModel(notificationModel);
        }
        
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminNotification.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new AdminNotification().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel ContentGeneratePanel;
    private javax.swing.JPanel ContentMainPanel;
    private javax.swing.JPanel ContentPanel;
    private javax.swing.JPanel ContentViewPanel;
    private javax.swing.JPanel GenerateNotification;
    private javax.swing.JLabel GenerateNotificationIconLabel;
    private javax.swing.JLabel GenerateNotificationLabel;
    private javax.swing.JLabel GenerateNotificationLabel2;
    private javax.swing.JLabel GenerateNotificationLabel3;
    private javax.swing.JLabel HomeIconLabel;
    private javax.swing.JLabel HomeLabel;
    private javax.swing.JPanel MenuPanel;
    private javax.swing.JLabel NotificationDateLabel;
    private javax.swing.JTextField NotificationDateTextField;
    private javax.swing.JLabel NotificationDescriptionLabel;
    private javax.swing.JScrollPane NotificationDescriptionScrollPane;
    private javax.swing.JTextArea NotificationDescriptionTextArea;
    private javax.swing.JLabel NotificationIconLabel;
    private javax.swing.JLabel NotificationLabel;
    private javax.swing.JLabel NotificationLabel2;
    private javax.swing.JPanel NotificationPanel;
    private javax.swing.JComboBox<String> NotificationTypeComboBox;
    private javax.swing.JLabel NotificationTypeLabel;
    private javax.swing.JButton SaveButton;
    private javax.swing.JLabel ViewNContentLabel;
    private javax.swing.JTextArea ViewNContentText;
    private javax.swing.JLabel ViewNDateLabel;
    private javax.swing.JTextField ViewNDateText;
    private javax.swing.JLabel ViewNTypeLabel;
    private javax.swing.JTextField ViewNTypeText;
    private javax.swing.JLabel ViewNotificationIconLabel;
    private javax.swing.JLabel ViewNotificationLabel;
    private javax.swing.JLabel ViewNotificationLabel2;
    private javax.swing.JLabel ViewNotificationLabel3;
    private javax.swing.JPanel ViewNotificationPanel;
    private javax.swing.JTable ViewNotificationTable;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    // End of variables declaration//GEN-END:variables
}
