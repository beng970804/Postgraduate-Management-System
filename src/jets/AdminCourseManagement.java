package jets;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.LinkedList;
import javafx.scene.paint.Color;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author USER
 */
public class AdminCourseManagement extends javax.swing.JFrame 
{

    /**
     * Creates new form CourseManagement
     */
    LinkedList<String> CourseID = new LinkedList<>();
    LinkedList<String> CourseName = new LinkedList<>();
    LinkedList<String> CourseTotalCreditHour = new LinkedList<>();
    
    DefaultTableModel Coursemodel = new DefaultTableModel()
    {
        @Override
        public boolean isCellEditable(int row, int column)
        {
            return false;
        }
    };
    public AdminCourseManagement() {
        initComponents();
        String url = "jdbc:db2:PMS";  //database name
        Connection con;
        try
        {
            Class.forName("com.ibm.db2.jcc.DB2Driver");
            con = DriverManager.getConnection(url);
            Statement sql;
            ResultSet rs;
            sql = con.createStatement();

            String input = "select * from course";
            rs = sql.executeQuery(input);
            while (rs.next ())
            {
                CourseID.add(rs.getString(1));
            }
            input = "select course_name from course";
            rs = sql.executeQuery(input);
            while (rs.next ())
            {
                //System.out.println(rs.getString(1));
                CourseName.add(rs.getString(1));
            }
            input = "select total_credit_hour from course";
            rs = sql.executeQuery(input);
            while (rs.next ())
            {
                //System.out.println(rs.getString(1));
                CourseTotalCreditHour.add(rs.getString(1));
            }
            
            if(CourseID.size() == 0)
            {
                Object[][] Coursedata =
                {
                    {}
                };
                String[] CoursecolName = {"Course ID", "Course Name", "Total Credit Hour"};
                Coursemodel.setDataVector(Coursedata, CoursecolName);
                CourseTable.setModel(Coursemodel);
                Coursemodel.removeRow(0);
            }
            else
            {
                Object[][] Coursedata =
                {
                    {CourseID.get(0), CourseName.get(0), CourseTotalCreditHour.get(0)}
                };
                String[] CoursecolName = {"Course ID", "Course Name", "Total Credit Hour"};
                Coursemodel.setDataVector(Coursedata, CoursecolName);
                for(int i = 1; i < CourseID.size(); i++)
                {
                    Coursemodel.addRow(new Object[]{CourseID.get(i), CourseName.get(i), CourseTotalCreditHour.get(i)});
                }
                CourseTable.setModel(Coursemodel);
            }
            rs.close();
            sql.close();
            con.close();
        }
        catch (ClassNotFoundException | SQLException e)
        {

        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ExceptionDialog = new javax.swing.JDialog();
        ExceptionDialogPanel = new javax.swing.JPanel();
        OKButton = new javax.swing.JButton();
        ExceptionScrollPane = new javax.swing.JScrollPane();
        ExceptionTextArea = new javax.swing.JTextArea();
        ProcessCompleteDialog = new javax.swing.JDialog();
        ProcessCompletePanel = new javax.swing.JPanel();
        ProcessCompleteOKButton = new javax.swing.JButton();
        ProcessCompleteLabel = new javax.swing.JLabel();
        DeleteConfirmation = new javax.swing.JDialog();
        jPanel1 = new javax.swing.JPanel();
        DeleteConfirmationOKButton = new javax.swing.JButton();
        DeleteConfirmationCancelButton = new javax.swing.JButton();
        WarningLabel = new javax.swing.JLabel();
        WarningMessageLabel = new javax.swing.JLabel();
        ProceedLabel = new javax.swing.JLabel();
        WarningMessageLabel1 = new javax.swing.JLabel();
        WarningMessageLabel2 = new javax.swing.JLabel();
        CourseManagementPanel = new javax.swing.JPanel();
        CourseManagementLabel = new javax.swing.JLabel();
        CourseTableScroll = new javax.swing.JScrollPane();
        CourseTable = new javax.swing.JTable();
        AddCourseLabel = new javax.swing.JLabel();
        CourseIDLabel = new javax.swing.JLabel();
        CourseNameLabel = new javax.swing.JLabel();
        TotalCreditHourLabel = new javax.swing.JLabel();
        TotalCreditHourTextField = new javax.swing.JTextField();
        CourseIDTextField = new javax.swing.JTextField();
        AddCourseButton = new javax.swing.JButton();
        EditCourseTitleLabel = new javax.swing.JLabel();
        EditCourseNameLabel = new javax.swing.JLabel();
        EditTotalCreditHourLabel = new javax.swing.JLabel();
        EditTotalCreditHourTextField = new javax.swing.JTextField();
        EditCourseButton = new javax.swing.JButton();
        BackButton = new javax.swing.JLabel();
        EditCourseLabel = new javax.swing.JLabel();
        DeleteCourseButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        CourseNameTextArea = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        EditCourseNameTextArea = new javax.swing.JTextArea();

        ExceptionDialog.setMinimumSize(new java.awt.Dimension(400, 200));

        ExceptionDialogPanel.setBackground(new java.awt.Color(255, 255, 255));

        OKButton.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        OKButton.setText("OK");
        OKButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OKButtonActionPerformed(evt);
            }
        });

        ExceptionScrollPane.setBorder(null);

        ExceptionTextArea.setEditable(false);
        ExceptionTextArea.setColumns(20);
        ExceptionTextArea.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        ExceptionTextArea.setLineWrap(true);
        ExceptionTextArea.setRows(5);
        ExceptionTextArea.setText("An unexpected error has occured!");
        ExceptionTextArea.setWrapStyleWord(true);
        ExceptionTextArea.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        ExceptionScrollPane.setViewportView(ExceptionTextArea);

        javax.swing.GroupLayout ExceptionDialogPanelLayout = new javax.swing.GroupLayout(ExceptionDialogPanel);
        ExceptionDialogPanel.setLayout(ExceptionDialogPanelLayout);
        ExceptionDialogPanelLayout.setHorizontalGroup(
            ExceptionDialogPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ExceptionDialogPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ExceptionDialogPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ExceptionDialogPanelLayout.createSequentialGroup()
                        .addGap(0, 250, Short.MAX_VALUE)
                        .addComponent(OKButton, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(ExceptionScrollPane))
                .addContainerGap())
        );
        ExceptionDialogPanelLayout.setVerticalGroup(
            ExceptionDialogPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ExceptionDialogPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ExceptionScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(OKButton)
                .addContainerGap(54, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout ExceptionDialogLayout = new javax.swing.GroupLayout(ExceptionDialog.getContentPane());
        ExceptionDialog.getContentPane().setLayout(ExceptionDialogLayout);
        ExceptionDialogLayout.setHorizontalGroup(
            ExceptionDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(ExceptionDialogPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        ExceptionDialogLayout.setVerticalGroup(
            ExceptionDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(ExceptionDialogPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        ProcessCompleteDialog.setSize(new java.awt.Dimension(400, 200));

        ProcessCompletePanel.setBackground(new java.awt.Color(255, 255, 255));

        ProcessCompleteOKButton.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        ProcessCompleteOKButton.setText("OK");
        ProcessCompleteOKButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ProcessCompleteOKButtonActionPerformed(evt);
            }
        });

        ProcessCompleteLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        ProcessCompleteLabel.setText("Something must have gone wrong!");

        javax.swing.GroupLayout ProcessCompletePanelLayout = new javax.swing.GroupLayout(ProcessCompletePanel);
        ProcessCompletePanel.setLayout(ProcessCompletePanelLayout);
        ProcessCompletePanelLayout.setHorizontalGroup(
            ProcessCompletePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ProcessCompletePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ProcessCompletePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ProcessCompletePanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(ProcessCompleteOKButton, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(ProcessCompleteLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 380, Short.MAX_VALUE))
                .addContainerGap())
        );
        ProcessCompletePanelLayout.setVerticalGroup(
            ProcessCompletePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ProcessCompletePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ProcessCompleteLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                .addComponent(ProcessCompleteOKButton)
                .addContainerGap())
        );

        javax.swing.GroupLayout ProcessCompleteDialogLayout = new javax.swing.GroupLayout(ProcessCompleteDialog.getContentPane());
        ProcessCompleteDialog.getContentPane().setLayout(ProcessCompleteDialogLayout);
        ProcessCompleteDialogLayout.setHorizontalGroup(
            ProcessCompleteDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(ProcessCompletePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        ProcessCompleteDialogLayout.setVerticalGroup(
            ProcessCompleteDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(ProcessCompletePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        DeleteConfirmation.setSize(new java.awt.Dimension(400, 200));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        DeleteConfirmationOKButton.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        DeleteConfirmationOKButton.setText("OK");
        DeleteConfirmationOKButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteConfirmationOKButtonActionPerformed(evt);
            }
        });

        DeleteConfirmationCancelButton.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        DeleteConfirmationCancelButton.setText("Cancel\n");
        DeleteConfirmationCancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteConfirmationCancelButtonActionPerformed(evt);
            }
        });

        WarningLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        WarningLabel.setText("WARNING");

        WarningMessageLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        WarningMessageLabel.setText("Deleting this course will affect Subject, Timetable, Exam");

        ProceedLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        ProceedLabel.setText("Proceed?");

        WarningMessageLabel1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        WarningMessageLabel1.setText("Result and Invoice. If the course has students, you");

        WarningMessageLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        WarningMessageLabel2.setText("cannot delete the course!");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(ProceedLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(DeleteConfirmationCancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(DeleteConfirmationOKButton, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(WarningLabel)
                            .addComponent(WarningMessageLabel)
                            .addComponent(WarningMessageLabel1)
                            .addComponent(WarningMessageLabel2))
                        .addGap(0, 46, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(WarningLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(WarningMessageLabel)
                .addGap(4, 4, 4)
                .addComponent(WarningMessageLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(WarningMessageLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(DeleteConfirmationOKButton)
                        .addComponent(DeleteConfirmationCancelButton))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(ProceedLabel)))
                .addGap(64, 64, 64))
        );

        javax.swing.GroupLayout DeleteConfirmationLayout = new javax.swing.GroupLayout(DeleteConfirmation.getContentPane());
        DeleteConfirmation.getContentPane().setLayout(DeleteConfirmationLayout);
        DeleteConfirmationLayout.setHorizontalGroup(
            DeleteConfirmationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        DeleteConfirmationLayout.setVerticalGroup(
            DeleteConfirmationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Admin - Manage Course");

        CourseManagementPanel.setBackground(new java.awt.Color(255, 255, 255));
        CourseManagementPanel.setPreferredSize(new java.awt.Dimension(1280, 720));

        CourseManagementLabel.setFont(new java.awt.Font("Segoe UI", 0, 48)); // NOI18N
        CourseManagementLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        CourseManagementLabel.setText("Course Management");

        CourseTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        CourseTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CourseTableMouseClicked(evt);
            }
        });
        CourseTableScroll.setViewportView(CourseTable);

        AddCourseLabel.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        AddCourseLabel.setText("Add Course");

        CourseIDLabel.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        CourseIDLabel.setText("Course ID           M");

        CourseNameLabel.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        CourseNameLabel.setText("Course Name");

        TotalCreditHourLabel.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        TotalCreditHourLabel.setText("Total Credit Hour");

        TotalCreditHourTextField.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        TotalCreditHourTextField.setForeground(new java.awt.Color(102, 102, 102));
        TotalCreditHourTextField.setText("Example: 40 (Positive Integers only)");
        TotalCreditHourTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                TotalCreditHourTextFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                TotalCreditHourTextFieldFocusLost(evt);
            }
        });

        CourseIDTextField.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        CourseIDTextField.setForeground(new java.awt.Color(102, 102, 102));
        CourseIDTextField.setText("Example: CS011 (Within 5 characters)");
        CourseIDTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                CourseIDTextFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                CourseIDTextFieldFocusLost(evt);
            }
        });
        CourseIDTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CourseIDTextFieldActionPerformed(evt);
            }
        });

        AddCourseButton.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        AddCourseButton.setText("Submit");
        AddCourseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddCourseButtonActionPerformed(evt);
            }
        });

        EditCourseTitleLabel.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        EditCourseTitleLabel.setText("Edit Course");

        EditCourseNameLabel.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        EditCourseNameLabel.setText("Course Name");

        EditTotalCreditHourLabel.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        EditTotalCreditHourLabel.setText("Total Credit Hour");

        EditTotalCreditHourTextField.setEditable(false);
        EditTotalCreditHourTextField.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        EditCourseButton.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        EditCourseButton.setText("Submit");
        EditCourseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditCourseButtonActionPerformed(evt);
            }
        });

        BackButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/icons8_Back_Arrow_64px_3.png"))); // NOI18N
        BackButton.setText("jLabel1");
        BackButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                BackButtonMousePressed(evt);
            }
        });

        EditCourseLabel.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        EditCourseLabel.setText("Click an item in the table to edit a specific item");

        DeleteCourseButton.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        DeleteCourseButton.setText("Delete Course");
        DeleteCourseButton.setEnabled(false);
        DeleteCourseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteCourseButtonActionPerformed(evt);
            }
        });

        CourseNameTextArea.setColumns(20);
        CourseNameTextArea.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        CourseNameTextArea.setForeground(new java.awt.Color(102, 102, 102));
        CourseNameTextArea.setLineWrap(true);
        CourseNameTextArea.setRows(2);
        CourseNameTextArea.setText("Example: MASTER OF ENGINEERING or MASTER OF COMPUTER SCIENCE (Within 50 characters)");
        CourseNameTextArea.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                CourseNameTextAreaFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                CourseNameTextAreaFocusLost(evt);
            }
        });
        jScrollPane1.setViewportView(CourseNameTextArea);

        EditCourseNameTextArea.setEditable(false);
        EditCourseNameTextArea.setColumns(20);
        EditCourseNameTextArea.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        EditCourseNameTextArea.setLineWrap(true);
        EditCourseNameTextArea.setRows(2);
        EditCourseNameTextArea.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                EditCourseNameTextAreaFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                EditCourseNameTextAreaFocusLost(evt);
            }
        });
        jScrollPane2.setViewportView(EditCourseNameTextArea);

        javax.swing.GroupLayout CourseManagementPanelLayout = new javax.swing.GroupLayout(CourseManagementPanel);
        CourseManagementPanel.setLayout(CourseManagementPanelLayout);
        CourseManagementPanelLayout.setHorizontalGroup(
            CourseManagementPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CourseManagementPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(CourseManagementPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(CourseManagementPanelLayout.createSequentialGroup()
                        .addGroup(CourseManagementPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(CourseManagementPanelLayout.createSequentialGroup()
                                .addComponent(BackButton, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(CourseManagementLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(DeleteCourseButton))
                            .addComponent(CourseTableScroll, javax.swing.GroupLayout.PREFERRED_SIZE, 1260, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 10, Short.MAX_VALUE))
                    .addGroup(CourseManagementPanelLayout.createSequentialGroup()
                        .addGroup(CourseManagementPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(CourseManagementPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(AddCourseButton)
                                .addGroup(CourseManagementPanelLayout.createSequentialGroup()
                                    .addGroup(CourseManagementPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, CourseManagementPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(CourseNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(TotalCreditHourLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(CourseIDLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(CourseManagementPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(CourseIDTextField)
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 450, Short.MAX_VALUE)
                                        .addComponent(TotalCreditHourTextField))))
                            .addComponent(AddCourseLabel))
                        .addGap(18, 18, 18)
                        .addGroup(CourseManagementPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(EditCourseLabel)
                            .addComponent(EditCourseTitleLabel)
                            .addGroup(CourseManagementPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(EditCourseButton)
                                .addGroup(CourseManagementPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, CourseManagementPanelLayout.createSequentialGroup()
                                        .addComponent(EditCourseNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 450, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(CourseManagementPanelLayout.createSequentialGroup()
                                        .addComponent(EditTotalCreditHourLabel)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(EditTotalCreditHourTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 450, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        CourseManagementPanelLayout.setVerticalGroup(
            CourseManagementPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CourseManagementPanelLayout.createSequentialGroup()
                .addGroup(CourseManagementPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(CourseManagementLabel)
                    .addGroup(CourseManagementPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(CourseManagementPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(BackButton)
                            .addComponent(DeleteCourseButton, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(CourseTableScroll, javax.swing.GroupLayout.PREFERRED_SIZE, 338, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(CourseManagementPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AddCourseLabel)
                    .addComponent(EditCourseTitleLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(CourseManagementPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(CourseManagementPanelLayout.createSequentialGroup()
                        .addGroup(CourseManagementPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(CourseIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(CourseIDLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(CourseManagementPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(CourseNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(CourseManagementPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(TotalCreditHourTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(TotalCreditHourLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(AddCourseButton))
                    .addGroup(CourseManagementPanelLayout.createSequentialGroup()
                        .addGroup(CourseManagementPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(CourseManagementPanelLayout.createSequentialGroup()
                                .addComponent(EditCourseLabel)
                                .addGap(107, 107, 107))
                            .addGroup(CourseManagementPanelLayout.createSequentialGroup()
                                .addGroup(CourseManagementPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jScrollPane2)
                                    .addComponent(EditCourseNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(CourseManagementPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(EditTotalCreditHourLabel)
                                    .addComponent(EditTotalCreditHourTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addComponent(EditCourseButton)))
                .addContainerGap(79, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(CourseManagementPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(CourseManagementPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void AddCourseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddCourseButtonActionPerformed
        // TODO add your handling code here:
        String errors = "Errors detected: ";
        Boolean errordetected = new Boolean(false);
        if(CourseIDTextField.getText().length() > 5 || CourseIDTextField.getText().length() < 1)
        {
            errors = errors + "\n" + "ID should only have 5 characters or less!";
            ExceptionTextArea.setText(errors);
            ExceptionDialog.setVisible(true);
            errordetected = true;
        }
        for(int i = 0; i < CourseID.size(); i++)
        {
            if(CourseID.get(i).equals("M" + CourseIDTextField.getText()))
            {
                errors = errors + "\n" + "ID already exists!";
                ExceptionTextArea.setText(errors);
                ExceptionDialog.setVisible(true);
                errordetected = true;
            }
            //System.out.println(CourseID.get(i) + " " + "M" + CourseIDTextField.getText());
        }
        if(CourseNameTextArea.getText().length() > 50 || CourseNameTextArea.getText().length() < 1)
        {
            errors = errors + "\n" + "Course Name should only have 50 characters or less!";
            ExceptionTextArea.setText(errors);
            ExceptionDialog.setVisible(true);
            errordetected = true;
        }
        try
        {
            if (Integer.parseInt(TotalCreditHourTextField.getText()) < 0)
            {
                errors = errors + "\n" + "Total Credit Hour should be more than 0!";
                ExceptionTextArea.setText(errors);
                ExceptionDialog.setVisible(true);
                errordetected = true;
            }
        }
        catch (NumberFormatException e)
        {
            errors = errors + "\n" + "Total Credit Hour should be integer only!";
            ExceptionTextArea.setText(errors);
            ExceptionDialog.setVisible(true);
            errordetected = true;
        }

        if(errordetected == false)
        {
            String RemoveNewLines = CourseNameTextArea.getText();
            RemoveNewLines = RemoveNewLines.replace("\n", " ");
            String url = "jdbc:db2:PMS";  //database name
            Connection con;
            try
            {
                Class.forName("com.ibm.db2.jcc.DB2Driver");
                con = DriverManager.getConnection(url);
                Statement sql;
                ResultSet rs;

                String input = "insert into COURSE values (" 
                        + "'" + "M" + CourseIDTextField.getText() + "'" + ", "
                        + "'" + RemoveNewLines + "'" + ", "
                        + "'" + TotalCreditHourTextField.getText() + "'" + ")"
                        ;
                sql = con.createStatement();
                sql.executeUpdate(input);
                sql.close();
                con.close();
                CourseID.add("M" + CourseIDTextField.getText());
                CourseName.add(CourseNameTextArea.getText());
                CourseTotalCreditHour.add(TotalCreditHourTextField.getText());
                Coursemodel.addRow(new Object[]{"M" + CourseIDTextField.getText(), 
                CourseNameTextArea.getText(), TotalCreditHourTextField.getText()});
                Coursemodel.fireTableDataChanged();
                EditCourseLabel.setText("Click an item in the table to edit a specific item");
                EditCourseNameTextArea.setEditable(false);
                EditCourseNameTextArea.setText("");
                EditTotalCreditHourTextField.setEditable(false);
                EditTotalCreditHourTextField.setText("");
                CourseIDTextField.setForeground(new java.awt.Color(102,102,102));
                CourseNameTextArea.setForeground(new java.awt.Color(102,102,102));
                TotalCreditHourTextField.setForeground(new java.awt.Color(102,102,102));
                CourseIDTextField.setText("Example: CS011 (Within 5 characters)");
                CourseNameTextArea.setText("Example: MASTER OF ENGINEERING or MASTER OF COMPUTER SCIENCE (Within 50 characters)");
                TotalCreditHourTextField.setText("Example: 40 (Positive Integers only)");
                ProcessCompleteLabel.setText("Course has been added successfully!");
                ProcessCompleteDialog.setVisible(true);
            }
            catch (ClassNotFoundException | SQLException e)
            {

            }
        }
    }//GEN-LAST:event_AddCourseButtonActionPerformed

    private void EditCourseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditCourseButtonActionPerformed
        // TODO add your handling code here:
        String errors = "Errors detected: ";
        Boolean errordetected = new Boolean(false);
        if(EditCourseNameTextArea.getText().length() > 50 || EditCourseNameTextArea.getText().length() < 1)
        {
            errors = errors + "\n" + "Course Name should only have 50 characters or less!";
            ExceptionTextArea.setText(errors);
            ExceptionDialog.setVisible(true);
            errordetected = true;
        }
        try
        {
            if (Integer.parseInt(EditTotalCreditHourTextField.getText()) < 0)
            {
                errors = errors + "\n" + "Total Credit Hour should be more than 0!";
                ExceptionTextArea.setText(errors);
                ExceptionDialog.setVisible(true);
                errordetected = true;
            }
        }
        catch (NumberFormatException e)
        {
            errors = errors + "\n" + "Total Credit Hour should be integer only!";
            ExceptionTextArea.setText(errors);
            ExceptionDialog.setVisible(true);
            errordetected = true;
        }
        if(errordetected == false)
        {
            String url = "jdbc:db2:PMS";  //database name
            String RemoveNewLines = EditCourseNameTextArea.getText();
            RemoveNewLines = RemoveNewLines.replace("\n", " ");
            Connection con;
            try
            {
                Class.forName("com.ibm.db2.jcc.DB2Driver");
                con = DriverManager.getConnection(url);
                Statement sql;
                ResultSet rs;
                int x = CourseTable.getSelectedRow();

                String input = "update COURSE set "
                        + "Course_Name = "
                        + "'" + RemoveNewLines + "'" + ", "
                        + "Total_Credit_Hour = "
                        + EditTotalCreditHourTextField.getText()
                        + " where Course_ID = " + "'" + CourseID.get(x) + "'";
                sql = con.createStatement();
                sql.executeUpdate(input);
                sql.close();
                con.close();
                CourseName.remove(x);
                CourseTotalCreditHour.remove(x);
                CourseName.add(x, EditCourseNameTextArea.getText());
                CourseTotalCreditHour.add(x, EditTotalCreditHourTextField.getText());
                Coursemodel.removeRow(x);
                Coursemodel.insertRow(x, new Object[]{CourseID.get(x), CourseName.get(x), CourseTotalCreditHour.get(x)});
                Coursemodel.fireTableDataChanged();
                EditCourseLabel.setText("Click an item in the table to edit a specific item");
                EditCourseNameTextArea.setEditable(false);
                EditCourseNameTextArea.setText("");
                EditTotalCreditHourTextField.setEditable(false);
                EditTotalCreditHourTextField.setText("");
                CourseIDTextField.setForeground(new java.awt.Color(102,102,102));
                CourseNameTextArea.setForeground(new java.awt.Color(102,102,102));
                TotalCreditHourTextField.setForeground(new java.awt.Color(102,102,102));
                CourseIDTextField.setText("Example: CS011 (Within 5 characters)");
                CourseNameTextArea.setText("Example: MASTER OF ENGINEERING or MASTER OF COMPUTER SCIENCE (Within 50 characters)");
                TotalCreditHourTextField.setText("Example: 40 (Positive Integers only)");
                ProcessCompleteLabel.setText("Edits were executed successfully!");
                ProcessCompleteDialog.setVisible(true);
            }
            catch (ClassNotFoundException | SQLException e)
            {

            }
        }
    }//GEN-LAST:event_EditCourseButtonActionPerformed

    private void CourseTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CourseTableMouseClicked
        // TODO add your handling code here:
        int x = CourseTable.getSelectedRow();
        EditCourseLabel.setText(CourseID.get(x));
        EditCourseNameTextArea.setEditable(true);
        EditCourseNameTextArea.setText(CourseName.get(x));
        EditTotalCreditHourTextField.setEditable(true);
        EditTotalCreditHourTextField.setText(CourseTotalCreditHour.get(x));
        DeleteCourseButton.setEnabled(true);
    }//GEN-LAST:event_CourseTableMouseClicked

    private void BackButtonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BackButtonMousePressed
        // TODO add your handling code here:
        if (Jets.UserType.equals("STUDENT"))
            new StudentMainMenu().setVisible(true);
        if (Jets.UserType.equals("ADMIN"))
            new AdminMainMenu().setVisible(true);
        if (Jets.UserType.equals("LECTURER"))
            new LecturerMainMenu().setVisible(true);
        dispose();
    }//GEN-LAST:event_BackButtonMousePressed

    private void OKButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OKButtonActionPerformed
        // TODO add your handling code here:
        ExceptionDialog.dispose();
    }//GEN-LAST:event_OKButtonActionPerformed

    private void CourseIDTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_CourseIDTextFieldFocusLost
        // TODO add your handling code here:
        if(CourseIDTextField.getText().equals(""))
        {
            CourseIDTextField.setForeground(new java.awt.Color(102,102,102));
            CourseIDTextField.setText("Example: CS011 (Within 5 characters)");
        }
    }//GEN-LAST:event_CourseIDTextFieldFocusLost

    private void TotalCreditHourTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_TotalCreditHourTextFieldFocusLost
        // TODO add your handling code here:
        if(TotalCreditHourTextField.getText().equals(""))
        {
            TotalCreditHourTextField.setForeground(new java.awt.Color(102,102,102));
            TotalCreditHourTextField.setText("Example: 40 (Positive Integers only)");
        }
    }//GEN-LAST:event_TotalCreditHourTextFieldFocusLost

    private void CourseIDTextFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_CourseIDTextFieldFocusGained
        // TODO add your handling code here:
        if(CourseIDTextField.getText().equals("Example: CS011 (Within 5 characters)"))
        {
            CourseIDTextField.setForeground(new java.awt.Color(0,0,0));
            CourseIDTextField.setText("");
        }
    }//GEN-LAST:event_CourseIDTextFieldFocusGained

    private void TotalCreditHourTextFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_TotalCreditHourTextFieldFocusGained
        // TODO add your handling code here:
        if (TotalCreditHourTextField.getText().equals("Example: 40 (Positive Integers only)"))
        {
            TotalCreditHourTextField.setForeground(new java.awt.Color(0,0,0));
            TotalCreditHourTextField.setText("");
        }
    }//GEN-LAST:event_TotalCreditHourTextFieldFocusGained

    private void CourseNameTextAreaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_CourseNameTextAreaFocusGained
        // TODO add your handling code here:
        if (CourseNameTextArea.getText().equals("Example: MASTER OF ENGINEERING or MASTER OF COMPUTER SCIENCE (Within 50 characters)"))
        {
            CourseNameTextArea.setForeground(new java.awt.Color(0,0,0));
            CourseNameTextArea.setText("");
        }
    }//GEN-LAST:event_CourseNameTextAreaFocusGained

    private void CourseNameTextAreaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_CourseNameTextAreaFocusLost
        // TODO add your handling code here:
        if(CourseNameTextArea.getText().equals(""))
        {
            CourseNameTextArea.setForeground(new java.awt.Color(102,102,102));
            CourseNameTextArea.setText("Example: MASTER OF ENGINEERING or MASTER OF COMPUTER SCIENCE (Within 50 characters)");
        }
    }//GEN-LAST:event_CourseNameTextAreaFocusLost

    private void CourseIDTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CourseIDTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CourseIDTextFieldActionPerformed

    private void EditCourseNameTextAreaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_EditCourseNameTextAreaFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_EditCourseNameTextAreaFocusGained

    private void EditCourseNameTextAreaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_EditCourseNameTextAreaFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_EditCourseNameTextAreaFocusLost

    private void ProcessCompleteOKButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ProcessCompleteOKButtonActionPerformed
        // TODO add your handling code here:
        ProcessCompleteDialog.dispose();
    }//GEN-LAST:event_ProcessCompleteOKButtonActionPerformed

    private void DeleteConfirmationOKButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteConfirmationOKButtonActionPerformed
        // TODO add your handling code here:
        int x = CourseTable.getSelectedRow();
        String url = "jdbc:db2:PMS";  //database name
        LinkedList<String> ItemsToDelete = new LinkedList<>();
        LinkedList<String> SubjectIDToDelete = new LinkedList<>();
        Connection con;
        try
        {
            Class.forName("com.ibm.db2.jcc.DB2Driver");
            con = DriverManager.getConnection(url);
            Statement sql;
            ResultSet rs;

            sql = con.createStatement();
            String input = "update STUDENT set "
                        + "Course_ID = "
                        + "'" + "NULL" + "'"
                        + " where Course_ID = " + "'" + CourseID.get(x) + "'";
            sql.executeUpdate(input);
            
            input = "select * from subject where course_id = '" + CourseID.get(x) + "'";
            rs = sql.executeQuery(input);
            while (rs.next ())
            {
                SubjectIDToDelete.add(rs.getString(1));
            }
            
            for(int j = 0; j < SubjectIDToDelete.size(); j++)
            {
                input = "select * from trimester where subject_id = '" + SubjectIDToDelete.get(j) + "'";
                rs = sql.executeQuery(input);
                while (rs.next ())
                {
                    ItemsToDelete.add(rs.getString(1));
                }
                for(int i = 0; i < ItemsToDelete.size(); i++)
                {
                    input = "delete from timetable where trimester_id = '" + ItemsToDelete.get(i) + "'";
                    sql.executeUpdate(input);
                }
                for(int i = 0; i < ItemsToDelete.size(); i++)
                {
                    input = "delete from exam_result where trimester_id = '" + ItemsToDelete.get(i) + "'";
                    sql.executeUpdate(input);
                }
                input = "delete from invoice_subject where subject_id = '" + SubjectIDToDelete.get(x) + "'";
                sql.executeUpdate(input);
                input = "delete from trimester where subject_id = '" + SubjectIDToDelete.get(x) + "'";
                sql.executeUpdate(input);
                input = "delete from subject where subject_id = '" + SubjectIDToDelete.get(x) + "'";
                sql.executeUpdate(input);
            }
            
            input = "delete from course where course_id = '" + CourseID.get(x) + "'";
            sql.executeUpdate(input);

            CourseID.remove(x);
            CourseName.remove(x);
            CourseTotalCreditHour.remove(x);

            Coursemodel.removeRow(x);
            Coursemodel.fireTableDataChanged();

            EditCourseLabel.setText("Click an item in the table to edit a specific item");
            EditCourseNameTextArea.setEditable(false);
            EditCourseNameTextArea.setText("");
            EditTotalCreditHourTextField.setEditable(false);
            EditTotalCreditHourTextField.setText("");
            
            CourseIDTextField.setForeground(new java.awt.Color(102,102,102));
            CourseNameTextArea.setForeground(new java.awt.Color(102,102,102));
            TotalCreditHourTextField.setForeground(new java.awt.Color(102,102,102));
            
            CourseIDTextField.setText("Example: CS011 (Within 5 characters)");
            CourseNameTextArea.setText("Example: MASTER OF ENGINEERING or MASTER OF COMPUTER SCIENCE (Within 50 characters)");
            TotalCreditHourTextField.setText("Example: 40 (Positive Integers only)");
            ProcessCompleteLabel.setText("Course deleted successfully!");
            DeleteCourseButton.setEnabled(false);
            DeleteConfirmation.dispose();
            ProcessCompleteDialog.setVisible(true);
            sql.close();
            con.close();
        }
        catch (ClassNotFoundException | SQLException e)
        {
            String error = "\n" + "The course has students in it! Make sure there are no students in this course left!";
            ExceptionTextArea.setText(error);
            ExceptionDialog.setVisible(true);
            DeleteConfirmation.dispose();
        }
    }//GEN-LAST:event_DeleteConfirmationOKButtonActionPerformed

    private void DeleteConfirmationCancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteConfirmationCancelButtonActionPerformed
        // TODO add your handling code here:
        DeleteConfirmation.dispose();
    }//GEN-LAST:event_DeleteConfirmationCancelButtonActionPerformed

    private void DeleteCourseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteCourseButtonActionPerformed
        // TODO add your handling code here:
        DeleteConfirmation.setVisible(true);
    }//GEN-LAST:event_DeleteCourseButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminCourseManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdminCourseManagement().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddCourseButton;
    private javax.swing.JLabel AddCourseLabel;
    private javax.swing.JLabel BackButton;
    private javax.swing.JLabel CourseIDLabel;
    private javax.swing.JTextField CourseIDTextField;
    private javax.swing.JLabel CourseManagementLabel;
    private javax.swing.JPanel CourseManagementPanel;
    private javax.swing.JLabel CourseNameLabel;
    private javax.swing.JTextArea CourseNameTextArea;
    private javax.swing.JTable CourseTable;
    private javax.swing.JScrollPane CourseTableScroll;
    private javax.swing.JDialog DeleteConfirmation;
    private javax.swing.JButton DeleteConfirmationCancelButton;
    private javax.swing.JButton DeleteConfirmationOKButton;
    private javax.swing.JButton DeleteCourseButton;
    private javax.swing.JButton EditCourseButton;
    private javax.swing.JLabel EditCourseLabel;
    private javax.swing.JLabel EditCourseNameLabel;
    private javax.swing.JTextArea EditCourseNameTextArea;
    private javax.swing.JLabel EditCourseTitleLabel;
    private javax.swing.JLabel EditTotalCreditHourLabel;
    private javax.swing.JTextField EditTotalCreditHourTextField;
    private javax.swing.JDialog ExceptionDialog;
    private javax.swing.JPanel ExceptionDialogPanel;
    private javax.swing.JScrollPane ExceptionScrollPane;
    private javax.swing.JTextArea ExceptionTextArea;
    private javax.swing.JButton OKButton;
    private javax.swing.JLabel ProceedLabel;
    private javax.swing.JDialog ProcessCompleteDialog;
    private javax.swing.JLabel ProcessCompleteLabel;
    private javax.swing.JButton ProcessCompleteOKButton;
    private javax.swing.JPanel ProcessCompletePanel;
    private javax.swing.JLabel TotalCreditHourLabel;
    private javax.swing.JTextField TotalCreditHourTextField;
    private javax.swing.JLabel WarningLabel;
    private javax.swing.JLabel WarningMessageLabel;
    private javax.swing.JLabel WarningMessageLabel1;
    private javax.swing.JLabel WarningMessageLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
